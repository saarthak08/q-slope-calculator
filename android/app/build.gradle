plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

def releaseKeystoreProperties = new Properties()
def releaseKeystorePropertiesFile = rootProject.file('keys/release-key.properties')
if (releaseKeystorePropertiesFile.exists()) {
    releaseKeystoreProperties.load(new FileInputStream(releaseKeystorePropertiesFile))
}

android {
    namespace = "in.sg.q_slope_calculator"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId = "in.sg.q_slope_calculator"
        minSdk = 21
        targetSdk = flutter.targetSdkVersion
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
        multiDexEnabled true
    }

    signingConfigs {
        debug {
            storeFile rootProject.file("keys/debug.keystore")
        }
        release {
           keyAlias releaseKeystoreProperties['keyAlias']
           keyPassword releaseKeystoreProperties['keyPassword']
           storeFile rootProject.file("keys/release.keystore")
           storePassword releaseKeystoreProperties['storePassword']
       }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.release
        }
    }

    flavorDimensions "env"

    productFlavors {
        dev {
            dimension "env"
            applicationIdSuffix ".dev"
            versionNameSuffix "-dev"
            buildConfigField 'String', 'FLAVOR', '"dev"'
            resValue "string", "app_name", "[DEV] Q-slope Calculator"
        }

        prod {
            dimension "env"
            buildConfigField 'String', 'FLAVOR', '"prod"'
            resValue "string", "app_name", "Q-slope Calculator"
        }
    }

    packagingOptions {
       resources.excludes.add("META-INF/*")
    }
}

flutter {
    source = "../.."
}
